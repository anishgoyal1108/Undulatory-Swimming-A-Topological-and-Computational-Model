import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D

# Constants
dt = 0.01  # Time step
densityWater = 1000.0
viscosity = 0.1

# Function to initialize a shape in the velocity field
def initializeShape(nx, ny, nz):
    velocityFieldX = np.zeros((nx, ny, nz))
    velocityFieldY = np.zeros((nx, ny, nz))
    velocityFieldZ = np.zeros((nx, ny, nz))
    # Initialize shape in the velocity field
    for i in range(nx):
        for j in range(ny):
            for k in range(nz):
                x = i / nx
                y = j / ny
                z = k / nz

                velocityFieldX[i, j, k] = np.sin(densityWater * dt * viscosity * np.pi * x)
                velocityFieldY[i, j, k] = np.cos(densityWater * dt * viscosity * np.pi * y)
                velocityFieldZ[i, j, k] = np.sin(densityWater * dt * viscosity * np.pi * z)
    return velocityFieldX, velocityFieldY, velocityFieldZ

# Size of the simulation grid
nx = 10
ny = 10
nz = 10

# Initialize velocity fields
velocityFieldX, velocityFieldY, velocityFieldZ = initializeShape(nx, ny, nz)

# Create meshgrid
x = np.arange(0, nx)
y = np.arange(0, ny)
z = np.arange(0, nz)
X, Y, Z = np.meshgrid(x, y, z)

# Create quiver plot
fig = plt.figure(figsize=(10, 7))
ax = fig.add_subplot(111, projection='3d')
ax.quiver(X, Y, Z, velocityFieldX, velocityFieldY, velocityFieldZ, length=0.1, normalize=True)
ax.set_xlabel('X')
ax.set_ylabel('Y')
ax.set_zlabel('Z')
ax.set_title('Velocity Field')
plt.show()
